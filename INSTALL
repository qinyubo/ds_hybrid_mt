Requirements
============
1. DataSpaces requires MPI. 


Quick Installation Instructions
===============================
The following steps are needed to configure, build and install DataSpaces.

1. Configure
# Examples for the configure command on supported architectures and networks. Please customize it according to your specific system configurations and environments (If there is no 'configure' file, please run ./autogen.sh to generate it.).

# Cray XE, XK, XC series
$ ./configure CC=cc FC=ftn

## On Cray platforms, DataSpaces requires the use of Cray protection domains for uGNI network communication. 
Protection domains are a Cray uGNI security feature that allow different applications to perform RDMA transfers 
to one another on the uGNI network and consist of a ptag and cookie (or, for Aries, 2 cookie) pair. Please refer 
to the documentation below for DataSpaces configuration options based on the Cray uGNI network of your system. 
For more general information on protection domains, please see the Cray uGNI Documentation.

If you are creating a user-level protection domain using apmgr -c, please note that you must also modify
your run command to pass the credential as `aprun -p MY_PDOMAIN_NAME`.

## Cray uGNI Gemini Systems

If your system allows users to create user-level protection domains, `apmgr pdomain -c [YOUR-DOMAIN-NAME]` 
will create it and generate a unique ptag/cookie pair. You can then obtain the ptag/cookie information by 
running `apstat -P`. If your system does not allow user-level pdomains, you may see if any system-level domains 
are available (as defined by the field *Type* in the output of the `apstat -P` command). If neither options are 
available, please contact your system administrator for help creating and configuring protection domains.

Once you have a protection domain, you may use ONE of the following options:

1. If you do not expect your ptag or cookie to change, you may compile it directly into your coded 
directly by using the configure options:
$ ./configure CC=cc FC=ftn --with-gni-ptag=[GNI-PTAG-VALUE] --with-gni-cookie=[GNI-HEXA-COOKIE]

2. If you wish to provide the name of your domain at runtime, you can add `export DSPACES_GNI_PDOMAIN=[YOUR-DOMAIN-NAME]` 
to your job script. This method only works if the compute nodes are able to execute `apstat -P`.

3. If you wish to provide the ptag and cookie directly at runtime (i.e., if the compute nodes do not have the ability to execute `apstat -P`), 
you can add `export DSPACES_GNI_PTAG=[GNI-PTAG-VALUE]` and `export DSPACES_GNI_COOKIE=[GNI-HEXA-COOKIE]` to your job script.

NOTE that on Gemini systems, you must provide BOTH the ptag AND cookie if using options 1 or 3. 

## Cray uGNI Aries Systems

On Aries systems, there are two possible network configurations as set by machine administrators: 
(1) uGNI network has the Dynamic RDMA Credential (DRC) service enabled and (2) DRC service unavailable or not configured. 
For specific instructions for each case, see below. 

Note that regardless of the network configuration, the ptag is generated on-the-fly by the uGNI network on ALL Aries systems and should not be provided a priori. 

### Where Dynamic RDMA Credentials (DRC) is Enabled

DataSpaces is integrated wth DRC and manages the creation and exchange of credentials amongst all applications in a job. 
Ensure that the rdma-credentials binaries and libraries are in your path when compiling.
$ ./configure CC=cc FC=ftn --enable-drc

### Where No DRC is Available

Follow the instructions outlined in the Gemini section but note that you will not be providing the ptag in option 1 or 3.
$ ./configure CC=cc FC=ftn --with-gni-cookie=[GNI-HEXA-COOKIE]

# Infiniband cluster
$ ./configure CC=mpicc FC=mpif90

* For TACC Stampede InfiniBand Cluster
  $ module unload intel
  $ module unload mvapich2/2.1
  $ module load intel/13.0.2.146
  $ module load mvapich2/1.9a2
  $ ./configure CC=mpicc FC=mpif90 CFLAGS="-DHAVE_INFINIBAND -L/opt/ofed/lib64/ -lrdmacm -I/opt/ofed/include/" --with-ib-interface=ib

# IBM BlueGene/P
$ ./configure CC=mpixlc FC=mpixlf90 CFLAGS="-g -O0 -qarch=450 -qtune=450" --with-dcmf="/bgsys/drivers/ppcfloor"

# IBM BlueGene/Q
$ ./configure CC=/bgsys/drivers/ppcfloor/comm/xl/bin/mpixlc_r FC=/bgsys/drivers/ppcfloor/comm/xl/bin/mpixlf90 CFLAGS="-O0 -g -qlanglvl=extc99 -O3 -qarch=qp -qtune=qp -qfullpath"

# TCP/IP
$ ./configure CC=[C_COMPILER_OPTION] FC=[Fortran_COMPILER_OPTION] --enable-dart-tcp
* [C_COMPILER_OPTION]: C compiler in cluster; [Fortran_COMPILER_OPTION]: Fortran compiler in cluster.

2. Some of the useful configure options
 --prefix=/install/path
   Set the directory where DataSpaces will be installed.

 --with-max-num-array-dimension=integer value
   This option is used to configure the maximum number
   of array dimension that can be supported in
   DataSpaces/DIMES. Default value is set as 3. Note:
   the value can not be set larger than 10, or smaller than 3.

 --enable-dimes
   Build DataSpaces with DIstributed MEmory Space (DIMES) support.
   DIMES feature uses local RDMA memory buffers across application processes to build
   a virtual shared data space in-situ, which can be queried and directly accessed by 
   other applications in a data coupling workflow. Currently this feature is only 
   supported on Cray Gemini networks, Infiniband cluster and on IBM BG/P and BG/Q systems.

--enable-drc
  Build DataSpaces for Cray uGNI systems with Dynamic RDMA Credential (DRC) support. Note that using this method, users should not provide a ptag or cookie a priori.

 --with-dimes-rdma-buffer-size=integer value for megabytes
   This option specifies the maximum amount of RDMA memory buffer that
   can be used by DIMES in each application process. DIMES RDMA memory buffer is used
   to locally cache the data written by dimes_put(), and is also used by
   dimes_get() to fetch data in remote memory buffer. Must be used with
   --enable-dimes option. Default value is set as 64MB.

 --enable-dart-tcp 
   This option will enable DataSpaces to build on ethernet using TCP/IP socket interfaces. 
   Since socket is available in most of the current clusters, this option will avoid the 
   conflict of selections between IP network and other advanced networks (e.g. IB, Gemini). 

 --with-gni-ptag = PTAG DECIMAL VALUE
 --with-gni-cookie = COOKIE HEXA VALUE
   This two options directly give the values of ptag+cookie pair to DataSpaces in uGNI 
   based systems. When DataSpaces is running at Aries-based systems, ptag will be 
   automatically assigned by the system itself. Therefore, in those systems, only 
   --with-gni-cookie is required to provided and activated.

 --with-infiniband-msg-queue-size=integer value
   User can use this option to change the size of the messaging queue on DataSpaces servers.
   If you receive errors stating the messaging queue is full. You should use this option to
   increase the size of the messaging queue.

   For applications using DIMES, dimes_put_sync_all() or dimes_put_sync_group()
   API functions (see dimes_interface.h for detailed documentation) should be
   called periodically to free data objects cached in DIMES. Where there is no
   sufficient memory space, dimes_put()/dimes_get() would fail and return errors. 
   
 --enable-ib-cpp=yes
   To use cpp implementation of dart communication layer using infiniband. If this is enabled, some
   care needs to be taken on the configure command; CXX=mpicxx, LDFLAGS="-lstdc++ -lmpi_cxx -lpthread"
   e.g., 
   ./configure CC=mpicc FC=mpif90 CXX=mpicxx 
     LDFLAGS="-lstdc++ -lmpi_cxx -lpthread" \
     --enable-ib-cpp=yes --with-ib-interface=ib0 --prefix="install_dir"
   
3. Build & Install 
# Under project top directory
$ make
$ make install

For more information on installing DataSpaces and running the examples, or 
if you have any other questions, please visit the following web page:
http://personal.cac.rutgers.edu/TASSL/projects/data/support.html 
