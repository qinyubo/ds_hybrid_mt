{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ta",
				"tasks_received"
			],
			[
				"tasks",
				"tasks_received"
			],
			[
				"pthread",
				"pthread_mutex_unlock"
			],
			[
				"pthread_mute",
				"pthread_mutex_lock"
			],
			[
				"tasks_re",
				"tasks_received"
			],
			[
				"tasks_",
				"tasks_rpc_s"
			],
			[
				"tas",
				"task_mutex"
			],
			[
				"num",
				"num_thrd_in_low_pq"
			],
			[
				"loca",
				"local_tasks_req"
			],
			[
				"ts",
				"ts_queue_low"
			],
			[
				"lock",
				"lock_num"
			],
			[
				"lo",
				"lock_num"
			],
			[
				"mnd_",
				"mnd_lock"
			],
			[
				"va",
				"variable_names"
			],
			[
				"var",
				"vars_name"
			],
			[
				"which",
				"which_peer"
			],
			[
				"pthread_rw",
				"pthread_rwlock_unlock"
			],
			[
				"main",
				"main_thrd_wait"
			],
			[
				"task",
				"task_mutex"
			],
			[
				"debu",
				"debug_counter"
			],
			[
				"debug",
				"debug_counter"
			],
			[
				"sock",
				"socket_opened"
			],
			[
				"socket",
				"socket_thrd"
			],
			[
				"socke",
				"socket_thrd"
			],
			[
				"timer_",
				"timer_timestamp_3"
			],
			[
				"woe",
				"worker_attr"
			],
			[
				"wo",
				"worker_attr"
			],
			[
				"pthread_r",
				"pthread_rwlock_wrlock"
			],
			[
				"thread",
				"thread_handle_direct"
			],
			[
				"nu",
				"num_local_peer"
			],
			[
				"u",
				"uloga"
			],
			[
				"pee",
				"peer_id"
			],
			[
				"dart",
				"dart_rpc_tcp"
			],
			[
				"rpc_send",
				"rpc_send_direct"
			],
			[
				"dcg_ob",
				"dcg_obj_data_get"
			],
			[
				"time",
				"timer_timestamp_2"
			],
			[
				"dcg_obj",
				"dcg_obj_put"
			],
			[
				"avail",
				"avail_receiver"
			],
			[
				"size",
				"sizeof"
			],
			[
				"avai",
				"avail_receiver"
			],
			[
				"rece",
				"receiver_rank"
			],
			[
				"ava",
				"avail_receiver"
			],
			[
				"MPI_",
				"MPI_COMM_WORLD"
			],
			[
				"MPI_C",
				"MPI_Comm_rank"
			],
			[
				"wor",
				"world_rank"
			],
			[
				"node",
				"node_list"
			],
			[
				"nod",
				"node_list"
			],
			[
				"wr",
				"wr_get"
			],
			[
				"TASK",
				"TASK_BUDGET"
			],
			[
				"send",
				"sending_queue"
			],
			[
				"fi",
				"Finalize_my_task"
			],
			[
				"sender",
				"sender_rank"
			],
			[
				"mpi",
				"mpi_status"
			],
			[
				"MPI_S",
				"MPI_SUCCESS"
			],
			[
				"rec",
				"receiver_rank"
			],
			[
				"receiver",
				"receiver_rank"
			],
			[
				"reci",
				"received_queue"
			],
			[
				"sending",
				"sending_queue"
			],
			[
				"od",
				"odesc"
			],
			[
				"odsc",
				"odsc1"
			],
			[
				"hdr",
				"hdr_obj_get"
			],
			[
				"msg_bu",
				"msg_buf_alloc"
			],
			[
				"msg",
				"msg2"
			],
			[
				"yubo",
				"yubo_2"
			],
			[
				"dsgrpc_",
				"dsgrpc_obj_get"
			],
			[
				"data",
				"data_tab"
			],
			[
				"end",
				"endif"
			],
			[
				"tm",
				"tm_stamp"
			],
			[
				"comm",
				"common_put"
			],
			[
				"timer",
				"timer_timestamp"
			],
			[
				"NUM",
				"NUM_OFFSET"
			],
			[
				"Nu",
				"NUM_OFFSET"
			],
			[
				"APP",
				"APP1_PROC"
			],
			[
				"N",
				"NUM_SP"
			],
			[
				"NU",
				"NUM_OFFSET"
			],
			[
				"fil",
				"filename"
			],
			[
				"file",
				"file_dir"
			]
		]
	},
	"buffers":
	[
		{
			"file": "dart/gni/dart_rpc_gni.c",
			"settings":
			{
				"buffer_size": 83939,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "dart/gni/dart_rdma_gni.c",
			"settings":
			{
				"buffer_size": 15069,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dart/gni/dc_base_gni.c",
			"settings":
			{
				"buffer_size": 28180,
				"line_ending": "Windows"
			}
		},
		{
			"file": "dart/gni/dart_rpc_gni.h",
			"settings":
			{
				"buffer_size": 13185,
				"line_ending": "Windows"
			}
		},
		{
			"file": "dart/gni/ds_base_gni.c",
			"settings":
			{
				"buffer_size": 32253,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "dart/gni/ds_base_gni.h",
			"settings":
			{
				"buffer_size": 3668,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/C/test_put_run.c",
			"settings":
			{
				"buffer_size": 7178,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/C/test_get_run.c",
			"settings":
			{
				"buffer_size": 6798,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/C/run_theta.sh",
			"settings":
			{
				"buffer_size": 997,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "dart/ib/dc_base_ib.c",
			"settings":
			{
				"buffer_size": 34853,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dart/tcp/ds_base_tcp.c",
			"settings":
			{
				"buffer_size": 24741,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 469 files for \"dst_cq_hndl\" (regex, case sensitive)\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/gni/dart_rpc_gni.c:\n  805  \t}\n  806  \n  807: \tstatus = GNI_MemRegister(rpc_s->nic_hndl, (uint64_t)rpc_s->rpc_mem, (uint64_t)(rpc_s->num_buf * num * (sizeof(struct rpc_cmd) + RECVHEADER)), rpc_s->dst_cq_hndl, GNI_MEM_READWRITE, -1, &rpc_local_memory_handle);\n  808  \tif (status != GNI_RC_SUCCESS) \n  809  \t{\n  ...\n 1133      //No Vector Operation in this version\n 1134      //added for alignment\n 1135:     status = GNI_MemRegister(rpc_s->nic_hndl, (uint64_t)rr->msg->msg_data, (uint64_t)(rr->msg->size), rpc_s->dst_cq_hndl, GNI_MEM_READWRITE, -1, &mdh);\n 1136      if (status != GNI_RC_SUCCESS)\n 1137      {\n ....\n 1656  inline static int __process_event (struct rpc_server *rpc_s, uint64_t timeout)\n 1657  {\n 1658:   gni_cq_handle_t cq_array[] = {rpc_s->src_cq_hndl, rpc_s->dst_cq_hndl, rpc_s->sys_cq_hndl};\n 1659    gni_cq_entry_t event_data = 0;\n 1660    uint64_t event_type;\n ....\n 1923  inline static int __process_event (struct rpc_server *rpc_s, uint64_t timeout)\n 1924  {\n 1925: \tgni_cq_handle_t cq_array[] = {rpc_s->src_cq_hndl, rpc_s->dst_cq_hndl, rpc_s->sys_cq_hndl};\n 1926  \tgni_cq_entry_t event_data = 0;\n 1927  \tuint64_t event_type;\n ....\n 2191  inline static int __process_event_mt (struct rpc_server *rpc_s, uint64_t timeout)\n 2192  {\n 2193:   gni_cq_handle_t cq_array[] = {rpc_s->src_cq_hndl, rpc_s->dst_cq_hndl, rpc_s->sys_cq_hndl};\n 2194    gni_cq_entry_t event_data = 0;\n 2195    uint64_t event_type;\n ....\n 2642  \t}\n 2643  \n 2644: \tstatus = GNI_CqCreate(rpc_s->nic_hndl, ENTRY_COUNT, 0, GNI_CQ_BLOCKING, NULL, NULL, &rpc_s->dst_cq_hndl);\n 2645  \tif (status != GNI_RC_SUCCESS) \n 2646  \t{\n ....\n 2782  \t}\n 2783  \n 2784: \tstatus = GNI_CqDestroy(rpc_s->dst_cq_hndl);\n 2785  \tif (status != GNI_RC_SUCCESS) \n 2786  \t{\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/gni/dart_rpc_gni.h:\n  349  \n  350  \tgni_cq_handle_t\t\tsrc_cq_hndl;\n  351: \tgni_cq_handle_t\t\tdst_cq_hndl;\n  352  \n  353  \tgni_smsg_attr_t\t\tlocal_smsg_attr;\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/dataspaces_server:\n    <binary>\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/test_reader:\n    <binary>\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/test_writer:\n    <binary>\n\n11 matches across 5 files\n\n\nSearching 469 files for \"rpc_process_event\" (regex, case sensitive)\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/dcmf/dart_rdma_dcmf.c:\n  318  int dart_rdma_process_reads()\n  319  {\n  320:     int err = rpc_process_event(drh->rpc_s);\n  321      if (err < 0) {\n  322:         uloga(\"%s(): rpc_process_event failed\\n\", __func__);\n  323          return -1;\n  324      }\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/dcmf/dart_rpc_dcmf.c:\n  244  /*\n  245    This is the  entry point for processing system  messages.  It can be\n  246:   called  from rpc_process_event() to  handle. system events. System messages\n  247    are not subject to flow control.\n  248  */\n  ...\n  982  }\n  983  \n  984: int rpc_process_event(struct rpc_server *rpc_s)\n  985  {\n  986  \tDCMF_Messager_advance();\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/dcmf/dart_rpc_dcmf.h:\n  357  int rpc_read_config(size_t *rank_dcmf, const char *);\n  358  int rpc_write_config(struct rpc_server *, const char *);\n  359: int rpc_process_event(struct rpc_server *);\n  360  \n  361  int rpc_server_start(struct rpc_server *);\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/dcmf/dc_base_dcmf.c:\n  222  \t*/\n  223  \tdo {\n  224: \t\trpc_process_event(dc->rpc_s);\n  225  \t}\n  226  \twhile (!dc->f_reg);\n  ...\n  262  \tint i = 0;\n  263  \twhile (i++ < dc->rpc_s->max_num_msg) \n  264: \t\trpc_process_event(dc->rpc_s);\n  265  \n  266  \treturn 0;\t\n  ...\n  312  #endif\n  313  \twhile (dc->num_posted)\n  314: \t\t\trpc_process_event(dc->rpc_s);\n  315  \n  316  \tdc_unregister(dc);\n  ...\n  324  int dc_process(struct dart_client *dc)\n  325  {\n  326: \treturn rpc_process_event(dc->rpc_s);\n  327  }\n  328  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/dcmf/ds_base_dcmf.c:\n  702  \n  703  \twhile (!ds->f_reg){\n  704: \t\terr = rpc_process_event(ds->rpc_s);\n  705  \t\tif (err<0)\n  706  \t\t\tgoto err_out;\n  ...\n  875  \n  876  int ds_process(struct dart_server *ds){\n  877: \treturn rpc_process_event(ds->rpc_s);\n  878  }\n  879  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/gni/dart_rpc_gni.c:\n  540  /*\n  541    This is the  entry point for processing system  messages.  It can be\n  542:   called  from sys_process_event()  or  rpc_process_event() to  handle\n  543    system events. System messages are not subject to flow control.\n  544  */\n  ...\n  903  /* \n  904     Decode  and   service  a  command  message  received   in  the  rpc\n  905:    buffer. This routine is called by 'rpc_process_event()' in response\n  906     to new incomming rpc request.\n  907  */\n  ...\n 1093  /*\n 1094    Default  completion  routine for  rpc  messages  we initiate.   This\n 1095:   routine is called by  'rpc_process_event()' to complete rpc requests\n 1096    which were locally initiated.\n 1097  */\n ....\n 1199                  peer->num_msg_at_peer = 0;\n 1200                  while (peer->num_msg_at_peer <= 0) {\n 1201:                     err = rpc_process_event_with_timeout(rpc_s, 1);\n 1202                      if (err < 0 && err != GNI_RC_TIMEOUT) {\n 1203:                         uloga(\"%s(): rpc_process_event_with_timeout err %d\\n\",\n 1204                                  __func__, err);\n 1205                          break;\n ....\n 1338            }                       \t      \n 1339  \n 1340: \t      err = rpc_process_event_with_timeout(rpc_s, 1);\n 1341  \t      if (err < 0 && err != GNI_RC_TIMEOUT)\n 1342              goto err_out;\n ....\n 2477  }\n 2478  \n 2479: int rpc_process_event(struct rpc_server *rpc_s)\n 2480  {\n 2481  \tint err;\n ....\n 2492  /\tMT version\n 2493  /****************************/\n 2494: int rpc_process_event_mt(struct rpc_server *rpc_s)\n 2495  {\n 2496  \tint err;\n ....\n 2556  \n 2557  \n 2558: int rpc_process_event_with_timeout(struct rpc_server *rpc_s, int timeout)\n 2559  {\n 2560  \tint err;\n ....\n 2730  \twhile (rpc_s->rr_num != 0) \n 2731  \t{\n 2732: \t        err = rpc_process_event_with_timeout(rpc_s, 100);\n 2733  \t\t{\n 2734  \t\t\tif(err != 0 && err != GNI_RC_TIMEOUT)\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/gni/dart_rpc_gni.h:\n  492  int rpc_server_get_id(void);\n  493  \n  494: int rpc_process_event(struct rpc_server *rpc_s);\n  495: int rpc_process_event_with_timeout(struct rpc_server *rpc_s, int timeout);\n  496: int rpc_process_event_mt(struct rpc_server *rpc_s);\n  497  \n  498  void rpc_add_service(enum cmd_type rpc_cmd, rpc_service rpc_func);\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/gni/dc_base_gni.c:\n  159  \twhile (dc->f_reg) \n  160  \t{\n  161: \t\terr = rpc_process_event(dc->rpc_s);\n  162  \t\tif (err < 0)\n  163  \t\t\tgoto err_out;\n  ...\n 1020  \t/*\n 1021  \twhile (dc->rpc_s->rr_num != 0)\n 1022: \t\trpc_process_event(dc->rpc_s);\n 1023  \t*/\n 1024  \t//uloga(\"Rank %d: step0 done.\\n\", dc->self->ptlmap.id);//debug\n ....\n 1045  int dc_process(struct dart_client *dc)//done\n 1046  {\n 1047:   return rpc_process_event(dc->rpc_s);\n 1048  }\n 1049  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/gni/ds_base_gni.c:\n 1191          rpc_process_msg_resend(ds->rpc_s, ds->peer_tab, ds->num_sp);\n 1192      }\n 1193: \treturn rpc_process_event_mt(ds->rpc_s);\n 1194  }\n 1195  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib/dart_rpc_ib.c:\n  453  /* \n  454     Decode  and   service  a  command  message  received   in  the  rpc\n  455:    buffer. This routine is called by 'rpc_process_event()' in response\n  456     to new incomming rpc request.\n  457  */\n  ...\n  515  /*\n  516    Default  completion  routine for  rpc  messages  we initiate.   This\n  517:   routine is called by  'rpc_process_event()' to complete rpc requests\n  518    which were locally initiated.\n  519  */\n  ...\n  534  \t   if(wc->opcode == IBV_WC_SEND || wc->opcode == IBV_WC_RDMA_WRITE || wc->opcode == IBV_WC_RDMA_READ || wc->opcode == IBV_WC_RECV)\n  535  \t   {\n  536: \t   err = rpc_process_event(rpc_s);\n  537  \t   if (err != 0) \n  538  \t   {\n  ...\n  748  \t\t\tfor(i = 0; i < 10; i++)\t//performance here\n  749  \t\t\t{\n  750: \t\t\t\terr = rpc_process_event_with_timeout(rpc_s, 1);\n  751  \t\t\t\tif(err != 0 && err != -ETIME)\n  752  \t\t\t\t\tgoto err_out;\n  ...\n 1774  }\n 1775  \n 1776: int rpc_process_event(struct rpc_server *rpc_s)\t//Done\n 1777  {\n 1778  \tint err;\n ....\n 1789  }\n 1790  \n 1791: int rpc_process_event_with_timeout(struct rpc_server *rpc_s, int timeout)\t//Done\n 1792  {\n 1793  \tint err;\n ....\n 2086  }\n 2087  \n 2088: int rpc_process_event_mt(struct rpc_server *rpc_s)\t//Done\n 2089  {\n 2090  \tint err;\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib/dart_rpc_ib.h:\n  500  int rpc_write_config(int appid, struct rpc_server *rpc_s);\t//\n  501  \n  502: int rpc_process_event(struct rpc_server *rpc_s);\n  503: int rpc_process_event_mt(struct rpc_server *rpc_s);\n  504: int rpc_process_event_with_timeout(struct rpc_server *rpc_s, int timeout);\n  505  \n  506  void rpc_add_service(enum cmd_type rpc_cmd, rpc_service rpc_func);\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib/dc_base_ib.c:\n  323          dc->num_unreg++;\n  324          while(dc->num_unreg != dc->peer_size) {\n  325:             err = rpc_process_event(dc->rpc_s);\n  326              if(err < 0)\n  327                  goto err_out;\n  ...\n  342              goto err_out_free;\n  343          while(dc->f_reg) {\n  344:             err = rpc_process_event(dc->rpc_s);\n  345              if(err < 0)\n  346                  goto err_out;\n  ...\n  373  //  printf(\"I am %d after sending unreg app to master 0\\n\", dc->rpc_s->ptlmap.id);              \n  374      while(dc->f_reg) {\n  375:         err = rpc_process_event(dc->rpc_s);\n  376          if(err < 0)\n  377              goto err_out;\n  ...\n  407      // Should wait here for 'unregister' confirmation. \n  408      while(dc->f_reg) {\n  409:         err = rpc_process_event(dc->rpc_s);\n  410          if(err < 0)\n  411              goto err_out;\n  ...\n  442              while(peer == NULL) {\n  443                  printf(\"STUCK %d, waitting for %d %d\\n\", dc->rpc_s->ptlmap.id, conpara.pm_cp.id, dc->rpc_s->num_peers);\n  444:                 rpc_process_event_with_timeout(dc->rpc_s, 1);\n  445                  sleep(1);\n  446                  peer = dc_get_peer(dc, conpara.pm_cp.id);\n  ...\n  732      }\n  733  \n  734:     err = rpc_process_event(dc->rpc_s);\n  735      if(err != 0)\n  736          goto err_out_free;\n  ...\n  783              goto err_out_free;\n  784          }\n  785:         err = rpc_process_event(dc->rpc_s);\n  786          if(err != 0)\n  787              goto err_out_free;\n  ...\n  855  \n  856      while(dc->f_reg == 0) {\n  857:         err = rpc_process_event_with_timeout(dc->rpc_s, 1);\n  858      }\n  859  \n  ...\n  933      //Waiting for dissemination msg from master server;\n  934      while(dc->f_reg == 0) {\n  935:         err = rpc_process_event_with_timeout(dc->rpc_s, 1);\n  936          if(err != 0 && err != -ETIME)\n  937              goto err_out;\n  ...\n 1131      /* comment\n 1132         while (dc->num_posted)\n 1133:        rpc_process_event(dc->rpc_s);\n 1134       */\n 1135      dc_unregister(dc);\n ....\n 1145  int dc_process(struct dart_client *dc)\n 1146  {\n 1147:     return rpc_process_event(dc->rpc_s);\n 1148  }\n 1149  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib/ds_base_ib.c:\n  421  \n  422  \t\t\t\t\twhile(ds->f_s_unreg) {\n  423: \t\t\t\t\t\terr = rpc_process_event(ds->rpc_s);\n  424  \t\t\t\t\t\tif(err < 0)\n  425  \t\t\t\t\t\t\tgoto err_out;\n  ...\n  638          goto err_out_free;\n  639      }\n  640:     err = rpc_process_event(ds->rpc_s);\n  641      if(err != 0)\n  642          goto err_out_free;\n  ...\n  689              goto err_out_free;\n  690          }\n  691:         err = rpc_process_event(ds->rpc_s);\n  692          if(err != 0)\n  693              goto err_out_free;\n  ...\n  728                  goto err_out_free;\n  729              }\n  730:             err = rpc_process_event(ds->rpc_s);\n  731              if(err != 0)\n  732                  goto err_out_free;\n  ...\n  765                                  goto err_out_free;\n  766                          }\n  767:                         err = rpc_process_event(ds->rpc_s);\n  768                          if(err != 0)\n  769                                  goto err_out_free;\n  ...\n  822                  goto err_out_free;\n  823              }\n  824:             err = rpc_process_event(ds->rpc_s);\n  825              if(err != 0)\n  826                  goto err_out_free;\n  ...\n 1030          goto err_out_free;\n 1031      }\n 1032:     err = rpc_process_event(ds->rpc_s);\n 1033      if(err != 0)\n 1034          goto err_out_free;\n ....\n 1092          goto err_out_free;\n 1093      }\n 1094:     err = rpc_process_event(ds->rpc_s);\n 1095      if(err != 0)\n 1096          goto err_out_free;\n ....\n 1707      //Waiting for dissemination msg from master server;\n 1708      while(ds->f_reg == 0) {\n 1709:         err = rpc_process_event_with_timeout(ds->rpc_s, 1);\n 1710          if(err != 0 && err != -ETIME)\n 1711              goto err_out;\n ....\n 2036  int ds_process(struct dart_server *ds)\n 2037  {\n 2038: \treturn rpc_process_event_mt(ds->rpc_s);\n 2039  }\n 2040  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib_cpp/.zedtmp.2ec07ef5-684a-4d61-bad6-5fbcdf06199d:\n  479  /* \n  480     Decode  and   service  a  command  message  received   in  the  rpc\n  481:    buffer. This routine is called by 'rpc_process_event()' in response\n  482     to new incomming rpc request.\n  483  */\n  ...\n  619  /*\n  620    Default  completion  routine for  rpc  messages  we initiate.   This\n  621:   routine is called by  'rpc_process_event()' to complete rpc requests\n  622    which were locally initiated.\n  623  */\n  ...\n  638  \t   if(wc->opcode == IBV_WC_SEND || wc->opcode == IBV_WC_RDMA_WRITE || wc->opcode == IBV_WC_RDMA_READ || wc->opcode == IBV_WC_RECV)\n  639  \t   {\n  640: \t   err = rpc_process_event(rpc_s);\n  641  \t   if (err != 0) \n  642  \t   {\n  ...\n  851  \t\tif (rpc_s->com_type == 1 || peer->req_posted > 100) {\n  852  \t\t\tfor(i = 0; i < 10; i++)\t{ // performance here\n  853: \t\t\t\terr = rpc_process_event_with_timeout(rpc_s, 1);\n  854  \t\t\t\t//if(err == -ETIME)\n  855  \t\t\t\t//break;\n  ...\n 1372  \t\n 1373  \t// Process any remaining events.\n 1374:   // err = rpc_process_event_with_timeout(rpc_s, 100);\n 1375    // while (err == 0 || err == -EINVAL) {\n 1376    //   printf(\"%d  process what?\\n\",rpc_s->ptlmap.id);\n 1377:   //   err = rpc_process_event_with_timeout(rpc_s, 100);\n 1378    // }\n 1379    // if (err != -ETIME) {\n ....\n 1993  }\n 1994  \n 1995: int rpc_process_event(struct rpc_server *rpc_s)\t//Done\n 1996  {\n 1997  \tint err;\n ....\n 2019  }\n 2020  \n 2021: int rpc_process_event_with_timeout(struct rpc_server *rpc_s, int timeout)\t//Done\n 2022  {\n 2023  \tint err;\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib_cpp/dart_rpc_ib_.cpp:\n  507  int handle_large_data_cmd(struct rpc_server* rpc_s_, struct rpc_cmd* cmd_);\n  508  int finalize_rpc_send(struct rpc_server* rpc_s_, struct rpc_cmd* cmd_);\n  509: void* rpc_process_event_loop(void* hash_to_notify_);\n  510  \n  511  struct rpc_server* rpc_server_init(char* ip_, int port, int num_buff, int num_rpc_per_buff, void* dart_ref_, enum rpc_component cmp_type)\n  ...\n  736  \n  737  // Decode and service a command message received in the rpc buffer. \n  738: // This routine is called by 'rpc_process_event()' in response to new incomming rpc request.\n  739  int rpc_cb_decode(struct rpc_server* rpc_s_, struct ibv_wc* wc_)\n  740  {\n  ...\n  868  }\n  869  \n  870: // Default completion routine for rpc messages we initiate. This routine is called by 'rpc_process_event()' \n  871  // to complete rpc requests which were locally initiated.\n  872  int rpc_cb_req_completion(struct rpc_server* rpc_s_, struct ibv_wc* wc_)\n  ...\n 1553  }\n 1554  \n 1555: int rpc_process_event(struct rpc_server* rpc_s_)\n 1556  {\n 1557  \tint err = trouble__process_event(rpc_s_, 100);\n ....\n 1564  }\n 1565  \n 1566: void* rpc_process_event_loop(void* hash_to_notify_)\n 1567  {\n 1568    // unsigned int hash = *((unsigned int*)hash_to_notify_);\n ....\n 1576  }\n 1577  \n 1578: int rpc_process_event_with_timeout(struct rpc_server* rpc_s_, int timeout)\n 1579  {\n 1580  \tint err;\n ....\n 1592      if (rpc_s_->com_type == DART_CLIENT || peer_->req_posted > 100) {\n 1593        for (int i = 0; i < 10; i++)  { // performance here\n 1594:         err = rpc_process_event_with_timeout(rpc_s_, 1);\n 1595          if (err > 0)\n 1596            return err;\n ....\n 1630    struct rpc_request *rr_, *tmp_;\n 1631    // Process any remaining events.\n 1632:   // err = rpc_process_event_with_timeout(rpc_s_, 100);\n 1633    // while (err == 0 || err == -EINVAL) {\n 1634    //   printf(\"%d  process what?\\n\",rpc_s_->ptlmap.id);\n 1635:   //   err = rpc_process_event_with_timeout(rpc_s_, 100);\n 1636    // }\n 1637    // if (err != -ETIME) {\n ....\n 1848          return err;\n 1849        }\n 1850:       // err = rpc_process_event(rpc_s_);\n 1851        // if (err) {\n 1852:       //   log(ERROR, \"rpc_process_event failed\")\n 1853        //   free(msg_chunk_->msg_data);\n 1854        //   free(msg_chunk_);\n ....\n 1949    log(DEBUG, \"_rpc_sending _rpc_send large_data_cmd to peer_id= \" << peer_->ptlmap.id << \"; hash= \" << hash)\n 1950    return_if_err(_rpc_send(rpc_s_, peer_, msg_large_data_), err, free(msg_large_data_);)\n 1951:   // err = rpc_process_event(rpc_s_);\n 1952    // if (err) {\n 1953:   //   log(ERROR, \"rpc_process_event failed\")\n 1954    //   free(msg_large_data_);\n 1955    //   return err;\n ....\n 1980                << \"\\t counter= \" << counter << \", chunk_size= \" << chunk_size)\n 1981      return_if_err(_rpc_send(rpc_s_, peer_, msg_chunk_), err, free(msg_chunk_->msg_data); free(msg_chunk_);)\n 1982:     // err = rpc_process_event(rpc_s_);\n 1983      // if (err) {\n 1984:     //   log(ERROR, \"rpc_process_event failed\")\n 1985      //   free(msg_chunk_->msg_data);\n 1986      //   free(msg_chunk_);\n ....\n 1992      ++counter;\n 1993    }\n 1994:   return_if_err(rpc_process_event(rpc_s_), err)\n 1995    hash__peer_msg_map[hash] = std::make_pair(peer_, msg_);\n 1996    \n 1997    ib_syncer.add_sync_point(hash, 1);\n 1998    pthread_t loop_thread;\n 1999:   return_err_if_ret_cond_flag(pthread_create(&loop_thread, NULL, rpc_process_event_loop, NULL), err, !=, 0, NULL)\n 2000    ib_syncer.wait(hash);\n 2001    ib_syncer.del_sync_point(hash);\n ....\n 2146        return err;\n 2147      }\n 2148:     return_if_err(rpc_process_event(rpc_s_), err)\n 2149    }\n 2150    \n ....\n 2218      return_if_err(_rpc_receive_direct(rpc_s_, peer_, msg_, true), err)\n 2219      // // To make sure this recv operation is completed before return\n 2220:     // return_if_err(rpc_process_event(rpc_s_), err)\n 2221      log(DEBUG, \"done; from peer_id= \" << peer_->ptlmap.id)\n 2222      return 0;\n ....\n 2251    //       return err;\n 2252    //     }\n 2253:   //     // err = rpc_process_event(rpc_s_);\n 2254    //     // if (err) {\n 2255:   //     //   log(ERROR, \"rpc_process_event failed\")\n 2256    //     //   free(msg_chunk_->msg_data);\n 2257    //     //   free(msg_chunk_);\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib_cpp/dc_base_ib_.cpp:\n   68  }\n   69  \n   70: // Called back by rpc_cb_req_completion which is called back by rpc_process_event upon completion\n   71  // of rpc_receive_direct'ing peers info from DS_Master\n   72  static int announce_cp_completion(struct rpc_server* rpc_s_, struct msg_buf* msg_)\n   ..\n  103  }\n  104  \n  105: // Called back by rpc_cb_req_completion which is called back by rpc_process_event upon completion\n  106  // of recving sp_announce_cp from DS_Master\n  107  int dcrpc_announce_cp(struct rpc_server* rpc_s_, struct rpc_cmd* cmd_)\n  ...\n  129  }\n  130  \n  131: // Called back by rpc_cb_req_completion which is called back by rpc_process_event upon completion\n  132  // of rpc_receive_direct'ing info of all the peers from DS_Master\n  133  int announce_cp_completion_all(struct rpc_server* rpc_s_, struct msg_buf* msg_)\n  ...\n  163  }\n  164  \n  165: // Called back by rpc_cb_req_completion which is called back by rpc_process_event upon completion\n  166  // of recving sp_announce_cp_all from DS_Master\n  167  int dcrpc_announce_cp_all(struct rpc_server* rpc_s_, struct rpc_cmd* cmd_)\n  ...\n  314  \tlog(DEBUG, \"WAITING for dissemination msg from master server...\")\n  315  \twhile (dc_->f_reg == 0) {\n  316: \t  return_if_err(rpc_process_event_with_timeout(dc_->rpc_s, 1), err)\n  317  \t}\n  318    \n  ...\n  340    log(DEBUG, \"WAITING for dissemination_all msg from server peer_id= \" << speer_in_charge_id(dc_->rpc_s, dc_) )\n  341  \twhile (dc_->f_reg_all == 0) {\n  342: \t  return_if_err(rpc_process_event_with_timeout(dc_->rpc_s, 1), err)\n  343  \t}\n  344    // For put/get performance\n  ...\n  385  \n  386  // Implements a simple 'start' barrier across the nodes in an app job.\n  387: // Called back by rpc_process_event upon receiving cp_barrier from another client -- master client sends this to others in barrier_broadcast\n  388  // TODO\n  389  int dcrpc_barrier(struct rpc_server* rpc_s_, struct rpc_cmd* cmd_)\n  ...\n  475    // Should wait here for 'unregister' confirmation. \n  476    while (dc_->f_reg) {\n  477:     return_if_err(rpc_process_event(dc_->rpc_s), err)\n  478    }\n  479    \n  ...\n  493  }\n  494  \n  495: int dc_process(struct dart_client* dc_) { return rpc_process_event(dc_->rpc_s); }\n  496  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib_cpp/ds_base_ib_.cpp:\n  170      log(DEBUG, \"rpc_sending sp_announce_cp_all to peer_id= \" << peer_->ptlmap.id)\n  171      return_err_if_ret_cond_flag(rpc_send(ds_->rpc_s, peer_, msg_), err, <, 0, err, free(msg_->msg_data); free(msg_);)\n  172:     return_if_err(rpc_process_event(ds_->rpc_s), err, free(msg_);)\n  173    }\n  174    free(client_peer_head__);\n  ...\n  220      log(DEBUG, \"rpc_sending sp_announce_cp to peer_id= \" << peer_->ptlmap.id)\n  221      return_err_if_ret_cond_flag(rpc_send(ds_->rpc_s, peer_, msg_), err, <, 0, err, free(msg_->msg_data); free(msg_);)\n  222:     return_if_err(rpc_process_event(ds_->rpc_s), err, free(msg_);)\n  223    }\n  224    free(client_peer_head__);\n  ...\n  260        log(DEBUG, \"rpc_sending sp_announce_cp to peer_id= \" << peer_->ptlmap.id)\n  261        return_err_if_ret_cond_flag(rpc_send(ds_->rpc_s, peer_, msg_), err, <, 0, err, free(msg_->msg_data); free(msg_);)\n  262:       return_if_err(rpc_process_event(ds_->rpc_s), err, free(msg_);)\n  263      }\n  264    }\n  ...\n  474    //           << \"\\t rpc_s_id= \" << ds_->rpc_s->ptlmap.id)\n  475    // while (ds_->num_slaves_done_interconnecting < ds_->num_sp - 1) {\n  476:   //   err = rpc_process_event_with_timeout(ds_->rpc_s, 1);\n  477    //   if (err != 0 && err != -ETIME) {\n  478:   //     log(ERROR, \"rpc_process_event_with_timeout failed!\")\n  479    //     return err;\n  480    //   }\n  ...\n  713    rpc_read_config: resolve the rdma_id based on Master DS's IP+Port\n  714    rpc_connect: connect and send my IP+Port/ID/APPID information to DS_Master\n  715:   rpc_process_event_with_timeout will callback dsrpc_announce_cp: Get feedback information from DS_Master: Feedback info contains (all the collected information including DS+DC)\n  716    \n  717    RPC channel connection to all the other peers\n  ...\n  754    log(DEBUG, \"rpc_sending sp_announce_cp_all to peer_id= \" << peer_->ptlmap.id)\n  755    return_err_if_ret_cond_flag(rpc_send(rpc_s_, peer_, msg_), err, <, 0, err, free(msg_->msg_data); free(msg_);)\n  756:   return_if_err(rpc_process_event(rpc_s_), err, free(msg_);)\n  757    free(client_peer_head__);\n  758    free(server_peer_head__);\n  ...\n  807               \"\\t rpc_s_id= \" << ds_->rpc_s->ptlmap.id)\n  808    while (ds_->f_reg == 0) {\n  809:     err = rpc_process_event_with_timeout(ds_->rpc_s, 1);\n  810      if (err != 0 && err != -ETIME) {\n  811:       log(ERROR, \"rpc_process_event_with_timeout failed!\")\n  812        return err;\n  813      }\n  ...\n  845    //           \"\\t rpc_s_id= \" << ds_->rpc_s->ptlmap.id)\n  846    // while (ds_->ready_to_disseminate_all != 1) {\n  847:   //   err = rpc_process_event_with_timeout(ds_->rpc_s, 1);\n  848    //   if (err != 0 && err != -ETIME) {\n  849:   //     log(ERROR, \"rpc_process_event_with_timeout failed!\")\n  850    //     return err;\n  851    //   }\n  ...\n  975  \n  976  // Called by the upper layer for sending/recving msg, data\n  977: int ds_process(struct dart_server* ds_) { return rpc_process_event(ds_->rpc_s); }\n  978  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib_cpp/exp:\n    <binary>\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib_cpp/include/dart_rpc_ib.h:\n  461  int rpc_write_config(struct rpc_server* rpc_s_);\n  462  \n  463: int rpc_process_event(struct rpc_server* rpc_s_);\n  464: int rpc_process_event_with_timeout(struct rpc_server* rpc_s_, int timeout);\n  465  \n  466  void rpc_add_service(enum cmd_type rpc_cmd, rpc_service rpc_func);\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/pami/dart_rdma_pami.c:\n  302  int dart_rdma_process_reads()\n  303  {\n  304:     int err = rpc_process_event(drh->rpc_s);\n  305      if (err < 0) {\n  306:         uloga(\"%s(): rpc_process_event failed\\n\", __func__);\n  307          return -1;\n  308      }\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/pami/dart_rpc_pami.c:\n  909  }\n  910  \n  911: int rpc_process_event(struct rpc_server *rpc_s)\n  912  {\n  913  \tint err;\n  ...\n  935  \n  936  \twhile(rpc_s->num_rep_posted != rpc_s->num_rep_freed)\n  937: \t\trpc_process_event(rpc_s);\n  938  \t//MPI_Barrier(MPI_COMM_WORLD);\n  939  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/pami/dart_rpc_pami.h:\n  320  int rpc_read_config(size_t *rank_dcmf, const char *);\n  321  int rpc_write_config(struct rpc_server *, const char *);\n  322: int rpc_process_event(struct rpc_server *);\n  323  \n  324  int rpc_server_start(struct rpc_server *);\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/pami/dc_base_pami.c:\n  291  \n  292          do {\n  293:                 rpc_process_event(dc->rpc_s);\n  294          }\n  295          while (!dc->f_reg);\n  ...\n  346  int dc_process(struct dart_client *dc)\n  347  {\n  348: \treturn rpc_process_event(dc->rpc_s);\n  349  }\n  350  \n  ...\n  384          int i = 0;\n  385          while (i++ < dc->rpc_s->max_num_msg)\n  386:                 rpc_process_event(dc->rpc_s);\n  387  \n  388          return 0;\n  ...\n  402  \n  403  \twhile(dc->num_posted)\n  404: \t\trpc_process_event(dc->rpc_s);\n  405  \tdc_unregister(dc);\n  406  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/pami/ds_base_pami.c:\n  681                  goto err_out_free;\n  682          while (!ds->f_reg){\n  683:                 err = rpc_process_event(ds->rpc_s);\n  684                  if (err<0)\n  685                          goto err_out;\n  ...\n  946  int ds_process(struct dart_server *ds)\n  947  {\n  948: \treturn rpc_process_event(ds->rpc_s);\n  949  }\n  950  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/portals/dart_rpc_portals.c:\n  403    find a better name for it.\n  404  */\n  405: static int __rpc_process_event(struct rpc_server *rpc_s)\n  406  {\n  407          ptl_event_t ev;\n  ...\n  668  /*\n  669    This is the  entry point for processing system  messages.  It can be\n  670:   called  from sys_process_event()  or  rpc_process_event() to  handle\n  671    system events. System messages are not subject to flow control.\n  672  */\n  ...\n  740                  if (peer->num_msg_at_peer == 0) {\n  741  \t\t\t/* Try to drain the queue first */\n  742: \t\t\terr = rpc_process_event_with_timeout(rpc_s, 1);\n  743  \t\t\tif (rpc_s->cmp_type == DART_CLIENT && err == 0)\n  744  \t\t\t\t/* We  extracted sucessfully  an event\n  ...\n  854  /* \n  855     Decode  and   service  a  command  message  received   in  the  rpc\n  856:    buffer. This routine is called by 'rpc_process_event()' in response\n  857     to new incomming rpc request or to unlink and free some buffers.\n  858  */\n  ...\n  907  \n  908  /* Forward declaration. */\n  909: int rpc_process_event(struct rpc_server *);\n  910  \n  911  /*\n  912    Default  completion  routine for  rpc  messages  we initiate.   This\n  913:   routine is called by  'rpc_process_event()' to complete rpc requests\n  914    which were locally initiated.\n  915  */\n  ...\n  921          if (ev->type == PTL_EVENT_SEND_END || ev->type == PTL_EVENT_PUT_END ||\n  922              ev->type == PTL_EVENT_REPLY_END || ev->type == PTL_EVENT_GET_END) {\n  923:                 err = rpc_process_event(rpc_s);\n  924                  if (err < 0) {\n  925                          uloga(\"'%s()': failed with %d.\\n\", __func__, err);\n  ...\n 1089  }\n 1090  \n 1091: int rpc_process_event(struct rpc_server *rpc_s)\n 1092  {\n 1093  \tint err;\n ....\n 1100  }\n 1101  \n 1102: int rpc_process_event_with_timeout(struct rpc_server *rpc_s, int timeout)\n 1103  {\n 1104  \tint err;\n ....\n 1232  \n 1233  \t/* Process any remaining events from the event queue. */\n 1234:         err = rpc_process_event_with_timeout(rpc_s, 100);\n 1235  \twhile (err == 0 || err == -EINVAL) {\n 1236  \t\tn++;\n 1237: \t        err = rpc_process_event_with_timeout(rpc_s, 100);\n 1238  \t}\n 1239  \n ....\n 1564  \n 1565          while (rpc_s->shoud_stop == 0) {\n 1566:                 err =  rpc_process_event(rpc_s);\n 1567                  if (err < 0) {\n 1568                          fprintf(stderr, \"Error on the processing loop.\\n\");\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/portals/dart_rpc_portals.h:\n  419  int rpc_read_config(ptl_process_id_t *);\n  420  int rpc_write_config(struct rpc_server *);\n  421: int rpc_process_event(struct rpc_server *);\n  422: int rpc_process_event_with_timeout(struct rpc_server *, int);\n  423  void rpc_add_service(enum cmd_type, rpc_service);\n  424  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/portals/dc_base_portals.c:\n  318  \n  319          do {\n  320:                 err = rpc_process_event(dc->rpc_s);\n  321                  if (err < 0)\n  322                          goto err_out;\n  ...\n  361  \t/* Should wait here for 'unregister' confirmation. */\n  362  \twhile (dc->f_reg) {\n  363: \t\terr = rpc_process_event(dc->rpc_s);\n  364  \t\tif (err < 0)\n  365  \t\t\tgoto err_out;\n  ...\n  369          int i = 0;\n  370          while (i++ < dc->rpc_s->max_num_msg) \n  371:                 rpc_process_event(dc->rpc_s);\n  372  \t*/\n  373          return 0;\n  ...\n  464  \n  465          while (dc->f_bar == 0) {\n  466:                 err = rpc_process_event(dc->rpc_s);\n  467                  if (err < 0)\n  468                          goto err_out;\n  ...\n  482          /* TODO: is this ending condition correct ? */\n  483          while (dc->num_posted)\n  484:                 rpc_process_event(dc->rpc_s);\n  485  \n  486          dc_unregister(dc);\n  ...\n  494  int dc_process(struct dart_client *dc)\n  495  {\n  496:         return rpc_process_event(dc->rpc_s);\n  497  }\n  498  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/portals/ds_base_portals.c:\n  599  \n  600          while (!ds->f_reg) {\n  601:                 err = rpc_process_event(ds->rpc_s);\n  602                  if (err < 0)\n  603                          goto err_out;\n  ...\n  848  int ds_process(struct dart_server *ds)\n  849  {\n  850:         return rpc_process_event(ds->rpc_s);\n  851  }\n  852  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/tcp/dart_rpc_tcp.c:\n  471  \n  472  /* Process the RPC requests from a specific peer */\n  473: static int rpc_process_event_peer(struct rpc_server *rpc_s, struct node_id *peer) {\n  474          struct rpc_cmd cmd;\n  475          \n  ...\n  509  }\n  510  \n  511: int rpc_process_event(struct rpc_server *rpc_s) {\n  512      int i;\n  513      for (i = 0; i < rpc_s->num_peers; ++i) {\n  ...\n  518          }\n  519  \n  520:         if (rpc_process_event_peer(rpc_s, peer) < 0) {\n  521              printf(\"[%s]: process event for peer %d failed, skip!\\n\", __func__, peer->ptlmap.id);\n  522              continue;\n  ...\n  685  \n  686  /* Process the RPC requests from a specific peer */\n  687: static int rpc_process_event_peer_mt(struct rpc_server *rpc_s, struct node_id *peer) {\n  688      \n  689  \n  ...\n  736  \n  737  //for DS server only, using multithreading\n  738: int rpc_process_event_mt(struct rpc_server *rpc_s) {\n  739      int i;\n  740      struct timeval now;\n  ...\n  748  \n  749  \n  750:         if (rpc_process_event_peer_mt(rpc_s, peer) < 0) {\n  751              printf(\"[%s]: process event for peer %d failed, skip!\\n\", __func__, peer->ptlmap.id);\n  752              continue;\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/tcp/dart_rpc_tcp.h:\n  327  int rpc_read_config(struct sockaddr_in *address, const char *filename);\n  328  int rpc_connect(struct rpc_server *rpc_s, struct node_id *peer);\n  329: int rpc_process_event(struct rpc_server *rpc_s);\n  330: int rpc_process_event_mt(struct rpc_server *rpc_s);\n  331: int rpc_process_event_direct(struct rpc_server *rpc_s);\n  332: int rpc_process_event_direct_mt(struct rpc_server *rpc_s);\n  333  int rpc_barrier(struct rpc_server *rpc_s, void *comm);\n  334  int rpc_send(struct rpc_server *rpc_s, struct node_id *peer, struct msg_buf *msg);\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/tcp/dc_base_tcp.c:\n  184  \n  185      while (!dc->f_reg) {\n  186:         rpc_process_event(dc->rpc_s);\n  187      }\n  188      dc_barrier(dc);\n  ...\n  253  \n  254  int dc_process(struct dart_client *dc) {\n  255:     return rpc_process_event(dc->rpc_s);\n  256  }\n  257  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/tcp/ds_base_tcp.c:\n  528      ds->self->ptlmap = ds->rpc_s->ptlmap;\n  529      while (!ds->f_reg) {\n  530:         rpc_process_event(ds->rpc_s);\n  531      }\n  532      int i;\n  ...\n  563  \n  564      while (!ds->f_reg) {\n  565:         rpc_process_event(ds->rpc_s);\n  566      }\n  567      int i;\n  ...\n  796  \n  797  int ds_process(struct dart_server* ds) {\n  798:     return rpc_process_event_mt(ds->rpc_s);\n  799  }\n  800  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/src/dimes_client.c:\n 1248      while (!rpc_send_complete(send_flags, num_dht_nodes))\n 1249      {\n 1250:         err = rpc_process_event(RPC_SERVER_PTR);\n 1251          if (err < 0) {\n 1252              free(send_flags);\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tau file/direct_mt_tau_result.txt:\n   17    6.3           38          510      100001      100001          5 int dsg_process(struct ds_gspace *) C [THROTTLED]\n   18    5.8           32          472      100001      100001          5 int ds_process(struct dart_server *) C [THROTTLED]\n   19:   5.4          129          439      100001      100001          4 int rpc_process_event_direct(struct rpc_server *) C [THROTTLED]\n   20:   3.8           39          309      100001      100005          3 int rpc_process_event_peer_direct(struct rpc_server *, struct node_id *) C [THROTTLED]\n   21    3.1          249          249           1           1     249296 MPI_Init()\n   22    2.6           85          212      100001      100001          2 int socket_recv_rpc_cmd(int, struct rpc_cmd *) C [THROTTLED]\n   23    1.6          126          126      100001           0          1 int socket_recv_bytes(int, char *, uint64_t, int) C [THROTTLED]\n   24:   0.3           22           22      100001           0          0 int rpc_process_event(struct rpc_server *) C [THROTTLED]\n   25    0.3           20           20           1           0      20341 MPI_Finalize()\n   26    0.1           11           11      100001           0          0 int dsg_complete(struct ds_gspace *) C [THROTTLED]\n   27:   0.0        0.116            3           2           6       1990 int rpc_process_event_peer(struct rpc_server *, struct node_id *) C\n   28    0.0            3            3           2           2       1926 int rpc_process_cmd(struct rpc_server *, struct rpc_cmd *) C\n   29    0.0        0.129            1           1           3       1801 void dsg_free(struct ds_gspace *) C\n   ..\n  525    2.8           38          510      100001      100001          5 int dsg_process(struct ds_gspace *) C [THROTTLED]\n  526    2.6           32          472      100001      100001          5 int ds_process(struct dart_server *) C [THROTTLED]\n  527:   2.4          129          439      100001      100001          4 int rpc_process_event_direct(struct rpc_server *) C [THROTTLED]\n  528:   1.7           39          309      100001      100005          3 int rpc_process_event_peer_direct(struct rpc_server *, struct node_id *) C [THROTTLED]\n  529    1.4          249          249           1           1     249296 MPI_Init()\n  530    1.2           85          212      100001      100001          2 int socket_recv_rpc_cmd(int, struct rpc_cmd *) C [THROTTLED]\n  531    0.7          126          126      100003           0          1 int socket_recv_bytes(int, char *, uint64_t, int) C [THROTTLED]\n  532:   0.1           22           22      100001           0          0 int rpc_process_event(struct rpc_server *) C [THROTTLED]\n  533    0.1        0.061           21           2          12      10808 int dsgrpc_obj_send_dht_peers(struct rpc_server *, struct rpc_cmd *) C\n  534    0.1           20           20           1           0      20341 MPI_Finalize()\n  535    0.1           11           11      100001           0          0 int dsg_complete(struct ds_gspace *) C [THROTTLED]\n  536    0.0            5            5           4           0       1268 void obj_data_free(struct obj_data *) C\n  537:   0.0        0.116            3           2           6       1990 int rpc_process_event_peer(struct rpc_server *, struct node_id *) C\n  538    0.0            3            3           2           2       1926 int rpc_process_cmd(struct rpc_server *, struct rpc_cmd *) C\n  539    0.0        0.052            2           2           2       1306 int obj_get_completion(struct rpc_server *, struct msg_buf *) C\n  ...\n  665    2.8            1           23      4545.5      4545.5          5 int dsg_process(struct ds_gspace *) C [THROTTLED]\n  666    2.6            1           21      4545.5      4545.5          5 int ds_process(struct dart_server *) C [THROTTLED]\n  667:   2.4            5           19      4545.5      4545.5          4 int rpc_process_event_direct(struct rpc_server *) C [THROTTLED]\n  668:   1.7            1           14      4545.5     4545.68          3 int rpc_process_event_peer_direct(struct rpc_server *, struct node_id *) C [THROTTLED]\n  669    1.4           11           11   0.0454545   0.0454545     249296 MPI_Init()\n  670    1.2            3            9      4545.5      4545.5          2 int socket_recv_rpc_cmd(int, struct rpc_cmd *) C [THROTTLED]\n  671    0.7            5            5     4545.59           0          1 int socket_recv_bytes(int, char *, uint64_t, int) C [THROTTLED]\n  672:   0.1            1            1      4545.5           0          0 int rpc_process_event(struct rpc_server *) C [THROTTLED]\n  673    0.1      0.00277        0.983   0.0909091    0.545455      10808 int dsgrpc_obj_send_dht_peers(struct rpc_server *, struct rpc_cmd *) C\n  674    0.1        0.925        0.925   0.0454545           0      20341 MPI_Finalize()\n  675    0.1        0.512        0.512      4545.5           0          0 int dsg_complete(struct ds_gspace *) C [THROTTLED]\n  676    0.0         0.23         0.23    0.181818           0       1268 void obj_data_free(struct obj_data *) C\n  677:   0.0      0.00527        0.181   0.0909091    0.272727       1990 int rpc_process_event_peer(struct rpc_server *, struct node_id *) C\n  678    0.0        0.173        0.175   0.0909091   0.0909091       1925 int rpc_process_cmd(struct rpc_server *, struct rpc_cmd *) C\n  679    0.0      0.00236        0.119   0.0909091   0.0909091       1306 int obj_get_completion(struct rpc_server *, struct msg_buf *) C\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tau file/mt_tau_result.txt:\n   16    5.2           57          465      100001      100001          5 int dsg_process(struct ds_gspace *) C [THROTTLED]\n   17    4.5           22          407      100001      100001          4 int ds_process(struct dart_server *) C [THROTTLED]\n   18:   4.3          242          385      100001      100001          4 int rpc_process_event_mt(struct rpc_server *) C [THROTTLED]\n   19    2.8          252          252           1           1     252477 MPI_Init()\n   20:   1.6           21          142      100001       99997          1 int rpc_process_event_peer_mt(struct rpc_server *, struct node_id *) C [THROTTLED]\n   21    1.3           39          120      100001      100001          1 int socket_recv_rpc_cmd(int, struct rpc_cmd *) C [THROTTLED]\n   22    0.9           81           81      100001           0          1 int socket_recv_bytes(int, char *, uint64_t, int) C [THROTTLED]\n   23:   0.2           22           22      100001           0          0 int rpc_process_event(struct rpc_server *) C [THROTTLED]\n   24    0.2           21           21           1           0      21675 MPI_Finalize()\n   25    0.1           11           11      100001           0          0 int dsg_complete(struct ds_gspace *) C [THROTTLED]\n   26:   0.0        0.101            3           2           6       1964 int rpc_process_event_peer(struct rpc_server *, struct node_id *) C\n   27    0.0            3            3           2           2       1907 int rpc_process_cmd(struct rpc_server *, struct rpc_cmd *) C\n   28    0.0            1            2           1           3       2867 void dsg_free(struct ds_gspace *) C\n   ..\n  199    1.9           57          465      100001      100001          5 int dsg_process(struct ds_gspace *) C [THROTTLED]\n  200    1.7           22          407      100001      100001          4 int ds_process(struct dart_server *) C [THROTTLED]\n  201:   1.6          242          385      100001      100001          4 int rpc_process_event_mt(struct rpc_server *) C [THROTTLED]\n  202    1.0          252          252           1           1     252477 MPI_Init()\n  203:   0.6           21          142      100001       99997          1 int rpc_process_event_peer_mt(struct rpc_server *, struct node_id *) C [THROTTLED]\n  204    0.5           39          120      100001      100001          1 int socket_recv_rpc_cmd(int, struct rpc_cmd *) C [THROTTLED]\n  205    0.3           81           81      100003           0          1 int socket_recv_bytes(int, char *, uint64_t, int) C [THROTTLED]\n  206:   0.1           22           22      100001           0          0 int rpc_process_event(struct rpc_server *) C [THROTTLED]\n  207    0.1           21           21           1           0      21675 MPI_Finalize()\n  208    0.0           11           11      100001           0          0 int dsg_complete(struct ds_gspace *) C [THROTTLED]\n  ...\n  210    0.0        0.052            7           2           2       3606 int obj_put_completion(struct rpc_server *, struct msg_buf *) C\n  211    0.0         0.09            7           2           4       3580 void ls_add_obj(struct ss_storage *, struct obj_data *) C\n  212:   0.0        0.101            3           2           6       1964 int rpc_process_event_peer(struct rpc_server *, struct node_id *) C\n  213    0.0            3            3           2           2       1907 int rpc_process_cmd(struct rpc_server *, struct rpc_cmd *) C\n  214    0.0            1            2           1           3       2867 void dsg_free(struct ds_gspace *) C\n  ...\n  341    1.9           19          155     33333.7     33333.7          5 int dsg_process(struct ds_gspace *) C [THROTTLED]\n  342    1.7            7          135     33333.7     33333.7          4 int ds_process(struct dart_server *) C [THROTTLED]\n  343:   1.6           80          128     33333.7     33333.7          4 int rpc_process_event_mt(struct rpc_server *) C [THROTTLED]\n  344    1.0           84           84    0.333333    0.333333     252477 MPI_Init()\n  345:   0.6            7           47     33333.7     33332.3          1 int rpc_process_event_peer_mt(struct rpc_server *, struct node_id *) C [THROTTLED]\n  346    0.5           13           40     33333.7     33333.7          1 int socket_recv_rpc_cmd(int, struct rpc_cmd *) C [THROTTLED]\n  347    0.3           27           27     33334.3           0          1 int socket_recv_bytes(int, char *, uint64_t, int) C [THROTTLED]\n  348:   0.1            7            7     33333.7           0          0 int rpc_process_event(struct rpc_server *) C [THROTTLED]\n  349    0.1            7            7    0.333333           0      21675 MPI_Finalize()\n  350    0.0            3            3     33333.7           0          0 int dsg_complete(struct ds_gspace *) C [THROTTLED]\n  ...\n  352    0.0       0.0173            2    0.666667    0.666667       3606 int obj_put_completion(struct rpc_server *, struct msg_buf *) C\n  353    0.0         0.03            2    0.666667     1.33333       3580 void ls_add_obj(struct ss_storage *, struct obj_data *) C\n  354:   0.0       0.0337            1    0.666667           2       1964 int rpc_process_event_peer(struct rpc_server *, struct node_id *) C\n  355    0.0            1            1    0.666667    0.666667       1907 int rpc_process_cmd(struct rpc_server *, struct rpc_cmd *) C\n  356    0.0        0.381        0.956    0.333333           1       2867 void dsg_free(struct ds_gspace *) C\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tcp_bak/dart_rpc_tcp.c:\n  423  \n  424  /* Process the RPC requests from a specific peer */\n  425: static int rpc_process_event_peer(struct rpc_server *rpc_s, struct node_id *peer) {\n  426      while (1) {\n  427          struct rpc_cmd cmd;\n  ...\n  466  }\n  467  \n  468: int rpc_process_event(struct rpc_server *rpc_s) {\n  469      int i;\n  470      for (i = 0; i < rpc_s->num_peers; ++i) {\n  ...\n  475              continue;\n  476          }\n  477:         uloga(\"%s(Yubo) before rpc_process_event_peer \\n\", __func__);\n  478:         if (rpc_process_event_peer(rpc_s, peer) < 0) {\n  479              printf(\"[%s]: process event for peer %d failed, skip!\\n\", __func__, peer->ptlmap.id);\n  480              continue;\n  481          }\n  482:         uloga(\"%s(Yubo) after rpc_process_event_peer \\n\", __func__);\n  483      }\n  484      return 0;\n  ...\n  750  \n  751  /* Process the RPC requests from a specific peer */\n  752: static int rpc_process_event_peer_mt(struct rpc_server *rpc_s, struct node_id *peer) {\n  753      pthread_t threadid;\n  754      while (1) {\n  ...\n  828  \n  829  /* Process the RPC requests from a specific peer */\n  830: void* rpc_process_event_peer_mt_2(struct tasks_request * tasks_request) {\n  831      struct tasks_request *tasks_req = (struct tasks_request*) tasks_request;\n  832      struct rpc_server *local_rpc_s = tasks_req->rpc_s;\n  ...\n  889  \n  890  //for DS server only, using multithreading\n  891: int rpc_process_event_mt(struct rpc_server *rpc_s) {\n  892      int i;\n  893      struct tasks_request *tasks_req = (struct tasks_request *)malloc(sizeof(struct tasks_request));\n  ...\n  918  \n  919  /*\n  920:         if (rpc_process_event_peer_mt(rpc_s, peer) < 0) {\n  921              printf(\"[%s]: process event for peer %d failed, skip!\\n\", __func__, peer->ptlmap.id);\n  922              continue;\n  ...\n  941      //create two worker threads\n  942      for(i=0; i<1; i++){\n  943:         pthread_create(&local_rpc_s->worker_thread[i], NULL, rpc_process_event_peer_mt_2, (void*)local_tasks_req);\n  944      }\n  945  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tcp_bak/dart_rpc_tcp.h:\n  316  int rpc_read_config(struct sockaddr_in *address, const char *filename);\n  317  int rpc_connect(struct rpc_server *rpc_s, struct node_id *peer);\n  318: int rpc_process_event(struct rpc_server *rpc_s);\n  319: int rpc_process_event_mt(struct rpc_server *rpc_s);\n  320  int rpc_barrier(struct rpc_server *rpc_s, void *comm);\n  321  int rpc_send(struct rpc_server *rpc_s, struct node_id *peer, struct msg_buf *msg);\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tcp_bak/dc_base_tcp.c:\n  184  \n  185      while (!dc->f_reg) {\n  186:         rpc_process_event(dc->rpc_s);\n  187      }\n  188      dc_barrier(dc);\n  ...\n  253  \n  254  int dc_process(struct dart_client *dc) {\n  255:     return rpc_process_event(dc->rpc_s);\n  256  }\n  257  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tcp_bak/ds_base_tcp.c:\n  525      ds->self->ptlmap = ds->rpc_s->ptlmap;\n  526      while (!ds->f_reg) {\n  527:         rpc_process_event(ds->rpc_s);\n  528      }\n  529      int i;\n  ...\n  560  \n  561      while (!ds->f_reg) {\n  562:         rpc_process_event(ds->rpc_s);\n  563      }\n  564      int i;\n  ...\n  797  \n  798  int ds_process(struct dart_server* ds) {\n  799:     return rpc_process_event_mt(ds->rpc_s);\n  800  }\n  801  \n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/dataspaces_server:\n    <binary>\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/test_reader:\n    <binary>\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/test_writer:\n    <binary>\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/Fortran/test_get:\n    <binary>\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/Fortran/test_put:\n    <binary>\n\n266 matches across 44 files\n\n\nSearching 469 files for \"wrter put\" (regex, case sensitive)\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/test_put_run.c:\n  159  \tfor(i = 0; i < num_vars; i++){\n  160  \t\tsprintf(var_name, \"mnd_%d\", variable_names[i]);  //Yubo, customize the variable names\n  161: \t\tprintf(\"wrter put var %d with lock #%d at time %f\\n\", variable_names[i],lock_num, timer_read(&timer_) );\n  162  \t\tcommon_put(var_name, ts, elem_size, dims, lb, ub,\n  163  \t\t\tdata_tab[i], type, p_lev);\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/test_put_run_noinit.c:\n  159  \tfor(i = 0; i < num_vars; i++){\n  160  \t\tsprintf(var_name, \"mnd_%d\", variable_names[i]);  //Yubo, customize the variable names\n  161: \t\tprintf(\"wrter put var %d with lock #%d at time %f\\n\", variable_names[i],lock_num, timer_read(&timer_) );\n  162  \t\tcommon_put(var_name, ts, elem_size, dims, lb, ub,\n  163  \t\t\tdata_tab[i], type, p_lev);\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/test_put_run.c:\n  159  \tfor(i = 0; i < num_vars; i++){\n  160  \t\tsprintf(var_name, \"mnd_%d\", variable_names[i]);  //Yubo, customize the variable names\n  161: \t\tprintf(\"wrter put var %d with lock #%d at time %f\\n\", variable_names[i],lock_num, timer_read(&timer_) );\n  162  \t\tcommon_put(var_name, ts, elem_size, dims, lb, ub,\n  163  \t\t\tdata_tab[i], type, p_lev);\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/test_writer:\n    <binary>\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/writer.log:\n    1: wrter put var 1 with lock #1 at time 5.350623\n    2  TS= 1 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.005105\n    3: wrter put var 1 with lock #1 at time 8.375887\n    4  TS= 2 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.004696\n    5: wrter put var 1 with lock #1 at time 11.392098\n    6  TS= 3 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.009771\n    7: wrter put var 1 with lock #1 at time 14.410747\n    8  TS= 4 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003856\n    9: wrter put var 1 with lock #1 at time 17.423651\n   10  TS= 5 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003666\n   11: wrter put var 1 with lock #1 at time 20.436438\n   12  TS= 6 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003737\n   13: wrter put var 1 with lock #1 at time 23.449147\n   14  TS= 7 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003768\n   15: wrter put var 1 with lock #1 at time 26.461633\n   16  TS= 8 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003849\n   17: wrter put var 1 with lock #1 at time 29.474230\n   18  TS= 9 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003802\n   19: wrter put var 1 with lock #1 at time 32.483344\n   20  TS= 10 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003937\n   21: wrter put var 1 with lock #1 at time 35.492650\n   22  TS= 11 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003755\n   23: wrter put var 1 with lock #1 at time 38.502952\n   24  TS= 12 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003869\n   25: wrter put var 1 with lock #1 at time 41.515447\n   26  TS= 13 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003831\n   27: wrter put var 1 with lock #1 at time 44.528242\n   28  TS= 14 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003734\n   29: wrter put var 1 with lock #1 at time 47.540792\n   30  TS= 15 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003706\n   31: wrter put var 1 with lock #1 at time 50.553221\n   32  TS= 16 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003856\n   33: wrter put var 1 with lock #1 at time 53.565652\n   34  TS= 17 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003829\n   35: wrter put var 1 with lock #1 at time 56.578235\n   36  TS= 18 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003881\n   37: wrter put var 1 with lock #1 at time 59.590832\n   38  TS= 19 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003861\n   39: wrter put var 1 with lock #1 at time 62.603383\n   40  TS= 20 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 0.003851\n   41  test_put_run(): done\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/2_thrd/1_server/writer.log:\n    1: wrter put var 1 with lock #1 at time 6.491269\n    2: wrter put var 1 with lock #1 at time 6.491268\n    3  TS= 1 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 4.674001\n    4: wrter put var 1 with lock #1 at time 25.440046\n    5: wrter put var 1 with lock #1 at time 25.440045\n    6  TS= 2 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 4.648255\n    7: wrter put var 1 with lock #1 at time 44.360605\n    8: wrter put var 1 with lock #1 at time 44.360604\n    9  TS= 3 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 4.624048\n   10: wrter put var 1 with lock #1 at time 63.228007\n   11: wrter put var 1 with lock #1 at time 63.228008\n   12  TS= 4 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 4.640034\n   13: wrter put var 1 with lock #1 at time 82.135853\n   14: wrter put var 1 with lock #1 at time 82.135852\n   15  TS= 5 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 4.643447\n   16  test_put_run(): done\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/2_thrd/2_server/writer.log:\n    1: wrter put var 1 with lock #1 at time 6.491812\n    2: wrter put var 1 with lock #1 at time 6.491813\n    3  TS= 1 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 3.372079\n    4: wrter put var 1 with lock #1 at time 20.239936\n    5: wrter put var 1 with lock #1 at time 20.239935\n    6  TS= 2 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 3.326926\n    7: wrter put var 1 with lock #1 at time 33.868492\n    8: wrter put var 1 with lock #1 at time 33.868493\n    9  TS= 3 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 3.347536\n   10: wrter put var 1 with lock #1 at time 47.543859\n   11: wrter put var 1 with lock #1 at time 47.543858\n   12  TS= 4 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 3.343633\n   13: wrter put var 1 with lock #1 at time 61.204998\n   14: wrter put var 1 with lock #1 at time 61.204997\n   15  TS= 5 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 3.318150\n   16  test_put_run(): done\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/single_thrd/1_server/writer.log:\n    1: wrter put var 1 with lock #1 at time 6.462892\n    2: wrter put var 1 with lock #1 at time 6.462892\n    3  TS= 1 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 4.002306\n    4: wrter put var 1 with lock #1 at time 22.414577\n    5: wrter put var 1 with lock #1 at time 22.414577\n    6  TS= 2 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 3.715240\n    7: wrter put var 1 with lock #1 at time 37.685937\n    8: wrter put var 1 with lock #1 at time 37.685937\n    9  TS= 3 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 3.703296\n   10: wrter put var 1 with lock #1 at time 52.973811\n   11: wrter put var 1 with lock #1 at time 52.973811\n   12  TS= 4 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 3.695814\n   13: wrter put var 1 with lock #1 at time 68.232946\n   14: wrter put var 1 with lock #1 at time 68.232946\n   15  TS= 5 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 3.700588\n   16  test_put_run(): done\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/single_thrd/2_server/writer.log:\n    1: wrter put var 1 with lock #1 at time 6.425564\n    2: wrter put var 1 with lock #1 at time 6.425564\n    3  TS= 1 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 2.914253\n    4: wrter put var 1 with lock #1 at time 18.491992\n    5: wrter put var 1 with lock #1 at time 18.491992\n    6  TS= 2 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 2.893071\n    7: wrter put var 1 with lock #1 at time 30.491452\n    8: wrter put var 1 with lock #1 at time 30.491452\n    9  TS= 3 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 2.902899\n   10: wrter put var 1 with lock #1 at time 42.515460\n   11: wrter put var 1 with lock #1 at time 42.515460\n   12  TS= 4 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 2.900096\n   13: wrter put var 1 with lock #1 at time 54.517727\n   14: wrter put var 1 with lock #1 at time 54.517727\n   15  TS= 5 #1 TRANSPORT_TYPE= DATASPACES write MAX time= 2.916042\n   16  test_put_run(): done\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/test_put_run.c:\n  159  \tfor(i = 0; i < num_vars; i++){\n  160  \t\tsprintf(var_name, \"mnd_%d\", variable_names[i]);  //Yubo, customize the variable names\n  161: \t\tprintf(\"wrter put var %d with lock #%d at time %f\\n\", variable_names[i],lock_num, timer_read(&timer_) );\n  162  \t\tcommon_put(var_name, ts, elem_size, dims, lb, ub,\n  163  \t\t\tdata_tab[i], type, p_lev);\n\n/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/test_put_run_noinit.c:\n  159  \tfor(i = 0; i < num_vars; i++){\n  160  \t\tsprintf(var_name, \"mnd_%d\", variable_names[i]);  //Yubo, customize the variable names\n  161: \t\tprintf(\"wrter put var %d with lock #%d at time %f\\n\", variable_names[i],lock_num, timer_read(&timer_) );\n  162  \t\tcommon_put(var_name, ts, elem_size, dims, lb, ub,\n  163  \t\t\tdata_tab[i], type, p_lev);\n\n66 matches across 11 files\n",
			"settings":
			{
				"buffer_size": 58030,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/C.sublime-build",
					""
				],
				[
					"Packages/User/C.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/C.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					""
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Traditional"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Script Builder"
				]
			],
			[
				"Packages/LaTeXTools/LaTeX.sublime-build",
				"Basic Builder"
			]
		],
		[
			[
				[
					"Packages/User/C.sublime-build",
					""
				],
				[
					"Packages/User/C.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/C.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 119.0,
		"last_filter": "install pa",
		"selected_items":
		[
			[
				"install pa",
				"Package Control: Install Package"
			]
		],
		"width": 412.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/gni",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/tcp",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/src",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C_BAK",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT"
	],
	"file_history":
	[
		"/Users/qybo123/Downloads/Montage_25 (1).xml",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/gni/dart_rpc_gni.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/tcp/ds_base_tcp.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib/dart_rpc_ib.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/tcp/dart_rpc_tcp.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib/dart_rpc_ib.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/tcp/dart_rpc_tcp.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/src/dc_gspace.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/Makefile.am",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/Makefile.am",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/gni/ds_base_gni.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/portals/dc_base_portals.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/test_get_run.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/test_put_run_noinit.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/test_get_run_noinit.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/common.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/src/dataspaces.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/src/dataspaces_fortran.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/test_reader_1.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/test_lev1_w1.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/list.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/test_lev1_w2.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/include/common_dataspaces.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/src/common_dataspaces.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/include/dataspaces.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/common.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/include/ss_data.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/src/ss_data.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/src/ds_gspace.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/test_get_run.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/test_put_run.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/test_lev2.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/test_lev3.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/cal_3lev_test.sh",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/Makefile.am",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/3lev/test_put_run.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/3lev/recompile.sh",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/3lev/test_lev1_w1.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/3lev/common.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/3lev/test_lev1_w2.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/3lev/test_lev2.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/3lev/test_lev3.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/3lev/test_writer_1.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/3lev/test_reader_1.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/3lev/cal_3lev_test.sh",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/3lev/recompile.sh",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/recompile.sh",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/configure.ac",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/3lev/Makefile.am",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/test_writer_1.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/test_writer_2.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/cal_mt.sh",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/test_put_run.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/common.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/test_reader_1.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/Makefile.am",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/test_reader.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/test_writer.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/test_reader_2.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/common.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/README",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/dataspaces_server.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/tcp/dc_base_tcp.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/MT/cal_MT.sh",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/test_get_run.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/test_rw.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/test_writer.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/test_reader.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/test_put_run.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/cal_test_wr.sh",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/gni/dart_rpc_gni.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/cal_local_run.sh",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/Makefile",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/gni/ds_base_gni.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib/ds_base_ib.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/ds_hybrid_mt.sublime-workspace",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib/dc_base_ib.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/cal_server",
		"/Users/qybo123/Desktop/run_ds_on_caliburn.sh",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tcp_bak/dc_base_tcp.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/tcp/dc_base_tcp.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tcp_bak/ds_base_tcp.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/dart.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/include/ds_gspace.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/tcp/ds_base_tcp.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tcp_bak/dart_rpc_tcp.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/dcmf/dart_rpc_dcmf.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib/dc_base_ib.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/simple_test.sh",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/gni/dc_base_gni.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/gni/dc_base_gni.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/include/dc_gspace.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/dcmf/ds_base_dcmf.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/dcmf/ds_base_dcmf.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/dcmf/dart_rpc_dcmf.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/dcmf/dc_base_dcmf.c",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/dcmf/dc_base_dcmf.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/tests/C/run_job.sh",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/dart/ib/ds_base_ib.h",
		"/Users/qybo123/Desktop/DataSpaces/ds_hybrid_mt/include/bbox.h",
		"/Users/qybo123/Desktop/DataSpaces/dsaas-1.4.0/src/dimes_server.c",
		"/Users/qybo123/Desktop/DataSpaces/dataspaces-1.6.5/dart/ib/dc_base_ib.c",
		"/Users/qybo123/Desktop/DataSpaces/dataspaces-1.6.5/dart/gni/dart_rpc_gni.c",
		"/Users/qybo123/Desktop/DataSpaces/dataspaces-1.6.5/include/bbox.h",
		"/Users/qybo123/Desktop/DataSpaces/dsaas-1.4.0/dart/ib/dart_rpc_ib.h",
		"/Users/qybo123/Desktop/DataSpaces/compare/dataspaces_issue17/dart/ib/dart_rpc_ib.c",
		"/Users/qybo123/Desktop/tmp/data/2/process.sh",
		"/Users/qybo123/Desktop/tmp/data/2/mem",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/BACKUP/0116/introduction.tex",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/BACKUP/0116/relatedwork.tex",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/relatedwork.tex",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/introduction.tex",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/background.tex",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/references.bib",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/environmental_setup.tex",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/experiment_evaluation.tex",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/AMR_simulator/RAMSES/method1.cpp",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/AMR_simulator/New_cpp/time_lw.cpp",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/AMR_simulator/New_cpp/pwr_lw.cpp",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/AMR_simulator/LMC/lmc.cpp",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/AMR_simulator/FLASH/flash.cpp",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/AMR_simulator/ENZO/enzo.cpp_BAK.cpp",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/methodology.tex",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/CCGrid_main.aux",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/experiment_evaluation.log",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/table.tex",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/AMR_simulator/ENZO/enzo.cpp",
		"/Users/qybo123/Google Drive/Research/power capping porject/2017 summer/I can make it!/BACKUP/0116/background.tex"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 115.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"wrter put",
			"pthread_mutex",
			"DST Indexing",
			"I am at",
			"DST Indexing ",
			"rpc_process_event",
			"dst_cq_hndl",
			"rpc_s->dst_cq_hndl",
			"rpc_process_event",
			"decode",
			"rpc_process_event_mt",
			"rpc_cb_decode_thrd",
			"cp",
			"check_cp",
			"sched_getcpu",
			"-p",
			"tasks_list",
			"obj_put",
			"INDEX_COUNT",
			"pmi.h",
			"fuck",
			"list_empty",
			"thrd_num",
			"obj_put",
			"MT",
			"rpc_process_event",
			"dspaces library was not properly initialized",
			"#Debug 8",
			"Fortran",
			"sleep",
			"pull j=",
			"__process_event",
			"process_event(Yubo) pull",
			"dataspaces_server_SOURCES",
			"bin_PROGRAMS",
			"test_reader.c",
			"You must do one of the following to use DataSpaces",
			"ds->f_reg",
			"rpc_process_ev",
			"DS_HAVE_DSPACES_LOCATION_AWARE_WRITE",
			"onnode",
			"process_event",
			"sys_peer",
			"dsrpc_cn_unregister",
			"mutex",
			"num_peers",
			"->num_peers",
			"rpc_process",
			"rpc_cb_decode",
			"__process_event",
			"dsrpc_cn_unregister",
			"dcrpc_unregister",
			"cn_unregister",
			"remove appid",
			"yubo",
			"ts_queue_high",
			"tasks_list",
			"task_thread",
			"thread_handle_new",
			"rpc_process_event",
			"rpc_connect",
			"pthread_attr_destroy",
			"dcg_obj_put",
			"obj_put()",
			"worker_thrd",
			"rpc_process_event_peer_direct",
			"Debug #1.1",
			"debug_flag",
			"peer->f_connected",
			"process",
			"rpc_process_event",
			"obj_put",
			"dsg_process",
			"ds_process",
			"socket_opened",
			"Tau_profile_c_timer",
			"yubo",
			"ds->f_stop",
			"dsg_process",
			"rpc_server_init",
			"rpc_server_init_socket",
			"sockfd",
			"rpc_server_init",
			"search_ip_address",
			"dsgrpc_lock_service",
			"dcgrpc_lock_service",
			"cp_lock",
			"thrd_num",
			"dcg_obj_put",
			"obj_put",
			"rpc_process_event",
			"exit(-1)",
			"list_em",
			"task_thread",
			"write",
			"dsgrpc_obj_put",
			"ss_obj_put",
			"\");\n",
			"dsgrpc_obj_put",
			"ss_obj_put",
			"peer_tab[",
			"dc->cn_peers",
			"find_local",
			"peer_tab",
			"rpc_s->ptlmap.id",
			"ptlmap.id",
			"rpc_server_find",
			"ptlmap.id =",
			"ptlmap.id",
			"common_init",
			"common_dspaces_put_location_aware",
			"shmem",
			"com_type",
			"cmp_type",
			"dart_client",
			"rpc_server",
			"rpc_component",
			"client",
			"qt_alloc_obj_data",
			"dspaces_get",
			"dsgrpc_obj_put",
			"ss_obj_put",
			"dsgrpc_obj_put",
			"ss_obj_put",
			"dcg_obj_put",
			"dsgrpc_obj_put",
			"ss_obj_put",
			"common_dspaces_put"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "dart/gni/dart_rpc_gni.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 83939,
						"regions":
						{
						},
						"selection":
						[
							[
								45152,
								45152
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 28612.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "dart/gni/dart_rdma_gni.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15069,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8396.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "dart/gni/dc_base_gni.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28180,
						"regions":
						{
						},
						"selection":
						[
							[
								28148,
								28165
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 16778.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "dart/gni/dart_rpc_gni.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13185,
						"regions":
						{
						},
						"selection":
						[
							[
								8257,
								8257
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5317.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "dart/gni/ds_base_gni.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32253,
						"regions":
						{
						},
						"selection":
						[
							[
								32217,
								32234
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 19277.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "dart/gni/ds_base_gni.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3668,
						"regions":
						{
						},
						"selection":
						[
							[
								2259,
								2259
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 387.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "tests/C/test_put_run.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7178,
						"regions":
						{
						},
						"selection":
						[
							[
								4694,
								4694
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 2329.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "tests/C/test_get_run.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6798,
						"regions":
						{
						},
						"selection":
						[
							[
								4199,
								4199
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 2.0,
						"translation.y": 1290.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "tests/C/run_theta.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 997,
						"regions":
						{
						},
						"selection":
						[
							[
								408,
								408
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Bash.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "dart/ib/dc_base_ib.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34853,
						"regions":
						{
						},
						"selection":
						[
							[
								8628,
								8645
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4989.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "dart/tcp/ds_base_tcp.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24741,
						"regions":
						{
						},
						"selection":
						[
							[
								17352,
								17369
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 11,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 58030,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										310,
										321
									],
									[
										626,
										637
									],
									[
										890,
										901
									],
									[
										1160,
										1171
									],
									[
										1432,
										1443
									],
									[
										1660,
										1671
									],
									[
										1785,
										1796
									],
									[
										1992,
										2003
									],
									[
										2547,
										2564
									],
									[
										2632,
										2649
									],
									[
										2896,
										2913
									],
									[
										3045,
										3062
									],
									[
										3342,
										3359
									],
									[
										3547,
										3564
									],
									[
										3695,
										3712
									],
									[
										3813,
										3830
									],
									[
										3954,
										3971
									],
									[
										4126,
										4143
									],
									[
										4276,
										4293
									],
									[
										4531,
										4548
									],
									[
										4785,
										4802
									],
									[
										4994,
										5011
									],
									[
										5238,
										5255
									],
									[
										5391,
										5408
									],
									[
										5609,
										5626
									],
									[
										5770,
										5787
									],
									[
										5915,
										5932
									],
									[
										6021,
										6038
									],
									[
										6191,
										6208
									],
									[
										6422,
										6439
									],
									[
										6478,
										6495
									],
									[
										6560,
										6577
									],
									[
										6814,
										6831
									],
									[
										6955,
										6972
									],
									[
										7150,
										7167
									],
									[
										7373,
										7390
									],
									[
										7628,
										7645
									],
									[
										7837,
										7854
									],
									[
										8107,
										8124
									],
									[
										8260,
										8277
									],
									[
										8403,
										8420
									],
									[
										8514,
										8531
									],
									[
										8651,
										8668
									],
									[
										8890,
										8907
									],
									[
										8946,
										8963
									],
									[
										9005,
										9022
									],
									[
										9340,
										9357
									],
									[
										9541,
										9558
									],
									[
										9800,
										9817
									],
									[
										10010,
										10027
									],
									[
										10297,
										10314
									],
									[
										10485,
										10502
									],
									[
										10655,
										10672
									],
									[
										10821,
										10838
									],
									[
										11013,
										11030
									],
									[
										11216,
										11233
									],
									[
										11370,
										11387
									],
									[
										11549,
										11566
									],
									[
										11702,
										11719
									],
									[
										11872,
										11889
									],
									[
										12062,
										12079
									],
									[
										12300,
										12317
									],
									[
										12526,
										12543
									],
									[
										12700,
										12717
									],
									[
										12858,
										12875
									],
									[
										13071,
										13088
									],
									[
										13271,
										13288
									],
									[
										13561,
										13578
									],
									[
										13770,
										13787
									],
									[
										14040,
										14057
									],
									[
										14247,
										14264
									],
									[
										14414,
										14431
									],
									[
										14589,
										14606
									],
									[
										14714,
										14731
									],
									[
										14825,
										14842
									],
									[
										15181,
										15198
									],
									[
										15508,
										15525
									],
									[
										15769,
										15786
									],
									[
										15970,
										15987
									],
									[
										16115,
										16132
									],
									[
										16271,
										16288
									],
									[
										16537,
										16554
									],
									[
										16744,
										16761
									],
									[
										16921,
										16938
									],
									[
										17083,
										17100
									],
									[
										17167,
										17184
									],
									[
										17511,
										17528
									],
									[
										17587,
										17604
									],
									[
										17903,
										17920
									],
									[
										17983,
										18000
									],
									[
										18150,
										18167
									],
									[
										18405,
										18422
									],
									[
										18595,
										18612
									],
									[
										18837,
										18854
									],
									[
										19035,
										19052
									],
									[
										19125,
										19142
									],
									[
										19405,
										19422
									],
									[
										19685,
										19702
									],
									[
										19942,
										19959
									],
									[
										20230,
										20247
									],
									[
										20539,
										20556
									],
									[
										20798,
										20815
									],
									[
										21013,
										21030
									],
									[
										21347,
										21364
									],
									[
										21483,
										21500
									],
									[
										21840,
										21857
									],
									[
										22176,
										22193
									],
									[
										22518,
										22535
									],
									[
										22761,
										22778
									],
									[
										22883,
										22900
									],
									[
										23142,
										23159
									],
									[
										23618,
										23635
									],
									[
										23853,
										23870
									],
									[
										23969,
										23986
									],
									[
										24195,
										24212
									],
									[
										24317,
										24334
									],
									[
										24538,
										24555
									],
									[
										24815,
										24832
									],
									[
										24872,
										24889
									],
									[
										25169,
										25186
									],
									[
										25254,
										25271
									],
									[
										25436,
										25453
									],
									[
										25590,
										25607
									],
									[
										25874,
										25891
									],
									[
										26097,
										26114
									],
									[
										26255,
										26272
									],
									[
										26409,
										26426
									],
									[
										26525,
										26542
									],
									[
										26770,
										26787
									],
									[
										26955,
										26972
									],
									[
										27149,
										27166
									],
									[
										27374,
										27391
									],
									[
										27612,
										27629
									],
									[
										27902,
										27919
									],
									[
										28079,
										28096
									],
									[
										28247,
										28264
									],
									[
										28550,
										28567
									],
									[
										28730,
										28747
									],
									[
										28834,
										28851
									],
									[
										29030,
										29047
									],
									[
										29155,
										29172
									],
									[
										29309,
										29326
									],
									[
										29646,
										29663
									],
									[
										29697,
										29714
									],
									[
										29957,
										29974
									],
									[
										30179,
										30196
									],
									[
										30363,
										30380
									],
									[
										30512,
										30529
									],
									[
										30752,
										30769
									],
									[
										30907,
										30924
									],
									[
										31107,
										31124
									],
									[
										31301,
										31318
									],
									[
										31506,
										31523
									],
									[
										31664,
										31681
									],
									[
										31830,
										31847
									],
									[
										32098,
										32115
									],
									[
										32269,
										32286
									],
									[
										32408,
										32425
									],
									[
										32823,
										32840
									],
									[
										32879,
										32896
									],
									[
										32938,
										32955
									],
									[
										33001,
										33018
									],
									[
										33335,
										33352
									],
									[
										33485,
										33502
									],
									[
										33700,
										33717
									],
									[
										33822,
										33839
									],
									[
										33963,
										33980
									],
									[
										34180,
										34197
									],
									[
										34692,
										34709
									],
									[
										34830,
										34847
									],
									[
										35349,
										35366
									],
									[
										35694,
										35711
									],
									[
										36336,
										36353
									],
									[
										36474,
										36491
									],
									[
										36993,
										37010
									],
									[
										37597,
										37614
									],
									[
										38267,
										38284
									],
									[
										38405,
										38422
									],
									[
										38924,
										38941
									],
									[
										39528,
										39545
									],
									[
										40268,
										40285
									],
									[
										40487,
										40504
									],
									[
										40917,
										40934
									],
									[
										41262,
										41279
									],
									[
										41904,
										41921
									],
									[
										42123,
										42140
									],
									[
										42553,
										42570
									],
									[
										43174,
										43191
									],
									[
										43816,
										43833
									],
									[
										44035,
										44052
									],
									[
										44465,
										44482
									],
									[
										45086,
										45103
									],
									[
										45552,
										45569
									],
									[
										45717,
										45734
									],
									[
										45923,
										45940
									],
									[
										45981,
										45998
									],
									[
										46212,
										46229
									],
									[
										46376,
										46393
									],
									[
										46592,
										46609
									],
									[
										46881,
										46898
									],
									[
										47098,
										47115
									],
									[
										47422,
										47439
									],
									[
										47731,
										47748
									],
									[
										47787,
										47804
									],
									[
										48113,
										48130
									],
									[
										48263,
										48280
									],
									[
										48477,
										48494
									],
									[
										48599,
										48616
									],
									[
										48740,
										48757
									],
									[
										49529,
										49538
									],
									[
										49955,
										49964
									],
									[
										50371,
										50380
									],
									[
										50721,
										50730
									],
									[
										50842,
										50851
									],
									[
										50963,
										50972
									],
									[
										51085,
										51094
									],
									[
										51207,
										51216
									],
									[
										51329,
										51338
									],
									[
										51451,
										51460
									],
									[
										51573,
										51582
									],
									[
										51695,
										51704
									],
									[
										51817,
										51826
									],
									[
										51940,
										51949
									],
									[
										52063,
										52072
									],
									[
										52186,
										52195
									],
									[
										52309,
										52318
									],
									[
										52432,
										52441
									],
									[
										52555,
										52564
									],
									[
										52678,
										52687
									],
									[
										52801,
										52810
									],
									[
										52924,
										52933
									],
									[
										53047,
										53056
									],
									[
										53282,
										53291
									],
									[
										53335,
										53344
									],
									[
										53456,
										53465
									],
									[
										53510,
										53519
									],
									[
										53632,
										53641
									],
									[
										53686,
										53695
									],
									[
										53808,
										53817
									],
									[
										53862,
										53871
									],
									[
										53984,
										53993
									],
									[
										54038,
										54047
									],
									[
										54272,
										54281
									],
									[
										54325,
										54334
									],
									[
										54446,
										54455
									],
									[
										54500,
										54509
									],
									[
										54622,
										54631
									],
									[
										54676,
										54685
									],
									[
										54798,
										54807
									],
									[
										54852,
										54861
									],
									[
										54974,
										54983
									],
									[
										55028,
										55037
									],
									[
										55267,
										55276
									],
									[
										55320,
										55329
									],
									[
										55441,
										55450
									],
									[
										55495,
										55504
									],
									[
										55617,
										55626
									],
									[
										55671,
										55680
									],
									[
										55793,
										55802
									],
									[
										55847,
										55856
									],
									[
										55969,
										55978
									],
									[
										56023,
										56032
									],
									[
										56262,
										56271
									],
									[
										56315,
										56324
									],
									[
										56436,
										56445
									],
									[
										56490,
										56499
									],
									[
										56612,
										56621
									],
									[
										56666,
										56675
									],
									[
										56788,
										56797
									],
									[
										56842,
										56851
									],
									[
										56964,
										56973
									],
									[
										57018,
										57027
									],
									[
										57385,
										57394
									],
									[
										57809,
										57818
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								50374,
								50374
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 20230.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 217.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.latextools":
	{
		"height": 227.0
	},
	"pinned_build_system": "Packages/LaTeXTools/LaTeX.sublime-build",
	"project": "ds_hybrid_mt.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 273.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
